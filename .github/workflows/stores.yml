name: stores

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "store/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install Akka CLI
        uses: akka/setup-akka-cli-action@v1
        with:
          token: ${{ secrets.AKKA_TOKEN }}
          project-id: ${{ secrets.AKKA_PROJECT_ID }}

      - run: echo "Build & deploy stores"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Get Central Route
        id: central_route
        run: |
          echo "Get Central Route"
          central_route_json=$(akka service get central -o json)

          # Extract the host from the first routes entry
          route_host=$(echo "$central_route_json" | jq -r '.routes[0].spec.host // "not-found"')

          echo "Route host: $route_host"
          echo "host=$route_host" >> $GITHUB_OUTPUT

      - name: Build & Push to local Docker
        run: mvn clean install -DskipTests
        working-directory: store

      - name: check docker
        run: docker images

      - name: Get non-latest pharmacy-store tag
        run: |
          REPO_NAME="pharmacy-store"
          NON_LATEST_TAG=$(docker images --format '{{.Repository}} {{.Tag}}' \
              | awk -v repo="$REPO_NAME" '$1 == repo && $2 != "latest" {print $2}')
          echo "Tag found: $NON_LATEST_TAG"
          echo "NON_LATEST_TAG=$NON_LATEST_TAG" >> $GITHUB_ENV

      - name: Use Central Route Host
        run: |
          echo "Central service host: ${{ steps.central_route.outputs.host }}"
          echo "Full URL: https://${{ steps.central_route.outputs.host }}"

      - name: Process stores from file
        run: |
          # Read the JSON file
          stores_json=$(cat config/stores.json)

          # Process each store
          while IFS= read -r store; do
            pharmacy_id=$(echo "$store" | jq -r '.pharmacyId')

            echo "üè™ Processing Store $pharmacy_id"

            akka service deploy store-$pharmacy_id pharmacy-store:${{ steps.central_route.outputs.host }} --push

          done < <(echo "$stores_json" | jq -c '.stores[]')
